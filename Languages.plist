<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>scpt</string>
		<key>ID</key>
		<integer>1</integer>
		<key>Name</key>
		<string>AppleScript</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>echo -e "tell application \"AppleScript Runner\"\ndo script \"$PWD/$filename\"\nend" | osascript; exit;</string>
		<key>SyntaxMode</key>
		<string>AppleScript</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#include &lt;stdio.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=c99</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>2</integer>
		<key>Name</key>
		<string>C</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>using System;

class Program
{
	static void Main(string[] args)
	{
		%@
	}
}</string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>cs</string>
		<key>ID</key>
		<integer>13</integer>
		<key>Name</key>
		<string>C#</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>mono $compiler</string>
		<key>SyntaxMode</key>
		<string>C#</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#include &lt;iostream&gt;

using namespace std;
int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>cpp</string>
		<key>ID</key>
		<integer>3</integer>
		<key>Name</key>
		<string>C++</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>C++</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>class Untitled {
	public static void main(String[] args) {
		%@
	}
}</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>java</string>
		<key>ID</key>
		<integer>4</integer>
		<key>Name</key>
		<string>Java</string>
		<key>OutputEncoding</key>
		<integer>30</integer>
		<key>RunCommand</key>
		<string>java $compiler</string>
		<key>SyntaxMode</key>
		<string>Java</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>js</string>
		<key>ID</key>
		<integer>11</integer>
		<key>Name</key>
		<string>JavaScript (Node.js)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>node $filename</string>
		<key>SyntaxMode</key>
		<string>JavaScript</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>Errors</key>
		<dict>
			<key>127</key>
			<string>Could not find Lua on your system. You can get it at http://lua.org</string>
		</dict>
		<key>FileExtension</key>
		<string>lua</string>
		<key>ID</key>
		<integer>12</integer>
		<key>Name</key>
		<string>Lua</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>lua $filename</string>
		<key>SyntaxMode</key>
		<string>Lua</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	@autoreleasepool {
		%@
	}
}</string>
		<key>CompilerFlags</key>
		<string>-std=c99 -framework Foundation</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>5</integer>
		<key>Name</key>
		<string>Objective-C</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>pl</string>
		<key>ID</key>
		<integer>6</integer>
		<key>Name</key>
		<string>Perl</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>perl $filename</string>
		<key>SyntaxMode</key>
		<string>Perl</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>&lt;?php
	%@
?&gt;</string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>php</string>
		<key>ID</key>
		<integer>7</integer>
		<key>Name</key>
		<string>PHP</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>php $filename</string>
		<key>SyntaxMode</key>
		<string>PHP</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>py</string>
		<key>ID</key>
		<integer>8</integer>
		<key>Name</key>
		<string>Python</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>python $filename</string>
		<key>SyntaxMode</key>
		<string>Python</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>rb</string>
		<key>ID</key>
		<integer>9</integer>
		<key>Name</key>
		<string>Ruby</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>ruby $filename</string>
		<key>SyntaxMode</key>
		<string>Ruby</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#!/bin/bash

%@</string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>sh</string>
		<key>ID</key>
		<integer>10</integer>
		<key>Name</key>
		<string>Shell Script</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>bash $filename</string>
		<key>SyntaxMode</key>
		<string>Shell Script</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>App = Application.currentApplication();

App.includeStandardAdditions = true;

answer = App.displayDialog('Is it me you\'re looking for?', {
  withTitle: 'Hello',
  defaultAnswer: 'Yes'
});</string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>jscpt</string>
		<key>ID</key>
		<integer>256748632</integer>
		<key>Name</key>
		<string>OSA Javascript</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>osascript -l JavaScript "$PWD/$filename"; exit;</string>
		<key>SyntaxMode</key>
		<string>JavaScript</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>.text
.macosx_version_min 10, 9

# Recent macosx seem to use _main as entry point, instead of start
.globl _main
.align 4, 0x90
_main:
mov $0x2000004, %rax         # System call write = 4
mov $1, %rdi                 # Write to standard out = 1
lea hello_world(%rip), %rsi  # The address of hello_world string
mov $14, %rdx                # The size to write
syscall                      # Invoke the kernel
mov $0x2000001, %rax         # System call number for exit = 1
xor %rdi, %rdi               # Exit success = 0
syscall                      # Invoke the kernel

.data
.globl hello_world
hello_world:
.asciz "Hello World!\n"</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>S</string>
		<key>ID</key>
		<integer>1621666161</integer>
		<key>Name</key>
		<string>x86-64 ASM (AT&amp;T)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>"./$compiler"</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
</array>
</plist>
